apiVersion: v1
kind: Namespace
metadata:
  name: cloudflared
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudflared
  namespace: cloudflared
spec:
  data:
  - remoteRef:
      key: cloudflared-proxmox
      property: credentials.json
    secretKey: credentials.json
  - remoteRef:
      key: cloudflared-proxmox
      property: TunnelID
    secretKey: TunnelID
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
---
apiVersion: v1
data:
  config.yaml: "originRequest:\n  originServerName: cloudflared.<path:stringreplacesecret#domain>\n\
    ingress:\n  - service: https://cilium-gateway-external.gateway.svc.cluster.local:443\n"
kind: ConfigMap
metadata:
  name: cloudflared
  namespace: cloudflared
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: 'true'
  name: cloudflared
  namespace: cloudflared
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
      - args:
        - tunnel
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        - $(TunnelID)
        env:
        - name: TunnelID
          valueFrom:
            secretKeyRef:
              key: TunnelID
              name: cloudflared
        - name: NO_AUTOUPDATE
          value: 'true'
        - name: TUNNEL_ORIGIN_SERVER_NAME
          value: cloudflared-test.<path:stringreplacesecret#domain>
        - name: TUNNEL_CRED_FILE
          value: /etc/cloudflared/creds/credentials.json
        - name: TUNNEL_METRICS
          value: 0.0.0.0:2000
        - name: TUNNEL_TRANSPORT_PROTOCOL
          value: quic
        - name: TUNNEL_ORIGIN_ENABLE_HTTP2
          value: 'true'
        - name: TUNNEL_POST_QUANTUM
          value: 'true'
        image: docker.io/cloudflare/cloudflared:2024.6.1
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 10
        name: cloudflared
        volumeMounts:
        - mountPath: /etc/cloudflared/config
          name: config
          readOnly: true
        - mountPath: /etc/cloudflared/creds
          name: creds
          readOnly: true
      volumes:
      - name: creds
        secret:
          secretName: cloudflared
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: cloudflared
        name: config
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
    external-dns.custom/type: public
  name: ingress
  namespace: cloudflared
spec:
  endpoints:
  - dnsName: ingress.<path:stringreplacesecret#domain>
    providerSpecific:
    - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
      value: 'true'
    recordType: CNAME
    targets:
    - <path:stringreplacesecret#cloudflaretunnelid>.cfargotunnel.com
