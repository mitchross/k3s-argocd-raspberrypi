configs:
  cm:
    create: true
    application.resourceTrackingMethod: "annotation+label"
    # Enable custom Kustomize options
    kustomize.buildOptions: "--enable-helm"
  cmp:
    create: true
    plugins:
      argocd-vault-plugin:
        generate:
          command: ["argocd-vault-plugin"]
        discover:
          find:
            command: ["sh", "-c"]
            args: ["find . -name '*.yaml' | xargs -I {} grep -l '<path:' {}"]
  params:
    server.insecure: true

crds:
  install: true
  keep: false

repoServer:
  extraContainers:
    - name: argocd-vault-plugin
      command: ["/var/run/argocd/argocd-cmp-server"]
      image: argoproj/argocd-vault-plugin:release-1.13
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
  volumes:
    - name: var-files
      emptyDir: {}
    - name: plugins
      emptyDir: {}
    - name: cmp-tmp
      emptyDir: {}

# Ensure the main ArgoCD containers have the necessary tools
global:
  image:
    repository: argoproj/argocd
    tag: v2.6.7  # Use a version that includes Kustomize with Helm support

initContainers:
  - name: download-tools
    image: alpine:3.8
    command: [sh, -c]
    args:
      - wget -O argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/latest/download/argocd-vault-plugin_linux_amd64 &&
        chmod +x argocd-vault-plugin &&
        mv argocd-vault-plugin /custom-tools/
    volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools

server:
  config:
    # Enable custom health check for Kustomize applications
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs