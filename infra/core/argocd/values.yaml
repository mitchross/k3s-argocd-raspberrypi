global:
  image:
    imagePullPolicy: IfNotPresent

configs:
  cm:
    create: true
    application.resourceTrackingMethod: "annotation+label"
    url: "https://argocd.<path:stringreplacesecret#domain>"
    dex.config: |
      connectors:
        - type: oidc
          name: authentik
          id: authentik
          config:
            issuer: https://auth.<path:stringreplacesecret#domain>/application/o/argocd/
            clientID: $sso:client_id
            clientSecret: $sso:client_secret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
    resource.compareoptions: |
      ignoreAggregatedRoles: true
  rbac:
    create: true
    policy.csv: |
      g, ArgoCD Admin, role:admin
  cmp:
    create: true
    plugins:
      kustomize-build:
        init:
          command: ["/bin/sh", "-c"]
          args: ["argocd-vault-plugin generate . > all-resources.yaml"]
        generate:
          command: ["kustomize", "build", "--load-restrictor", "LoadRestrictionsNone", "--enable-helm", "."]
  params:
    server.insecure: true

crds:
  install: true
  keep: false

server:
  extraArgs:
    - --insecure

repoServer:
  rbac:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "watch", "list"]
  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: cmp-plugin
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
  volumeMounts:
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: cmp-tmp
    - name: custom-tools
      mountPath: /usr/local/bin
  initContainers:
    - name: download-tools
      image: alpine:3.18
      command: [sh, -c]
      env:
        - name: AVP_VERSION
          value: "1.17.0"
      args:
        - >-
          wget -O argocd-vault-plugin
          https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  extraContainers:
    - name: kustomize-build
      command: [/var/run/argocd/argocd-cmp-server]
      image: '{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-plugin
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build.yaml
        - mountPath: /tmp
          name: cmp-tmp
        - name: custom-tools
          mountPath: /usr/local/bin/argocd-vault-plugin
          subPath: argocd-vault-plugin
    - name: avp
      command: [/var/run/argocd/argocd-cmp-server]
      image: '{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      env:
        - name: AVP_TYPE
          value: kubernetessecret
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
        - name: custom-tools
          mountPath: /usr/local/bin/argocd-vault-plugin
          subPath: argocd-vault-plugin

extraObjects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cmp-plugin
    data:
      kustomize-build.yaml: |
        apiVersion: argoproj.io/v1alpha1
        kind: ConfigManagementPlugin
        metadata:
          name: kustomize-build
        spec:
          init:
            command: ["/bin/sh", "-c"]
            args: ["argocd-vault-plugin generate . > all-resources.yaml"]
          generate:
            command: ["kustomize", "build", "--load-restrictor", "LoadRestrictionsNone", "--enable-helm", "."]
          lockRepo: false