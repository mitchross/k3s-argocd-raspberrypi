global:
  image:
    imagePullPolicy: IfNotPresent

configs:
  cm:
    create: true
    application.resourceTrackingMethod: "annotation+label"
    url: "https://argocd.<path:stringreplacesecret#domain>"
    dex.config: |
      connectors:
        - type: oidc
          name: authentik
          id: authentik
          config:
            issuer: https://auth.<path:stringreplacesecret#domain>/application/o/argocd/
            clientID: $sso:client_id
            clientSecret: $sso:client_secret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
    resource.compareoptions: |
      ignoreAggregatedRoles: true
  rbac:
    create: true
    policy.csv: |
      g, ArgoCD Admin, role:admin
  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [ "sh", "-c" ]
          args: [ "kustomize build --enable-helm" ]
      argocd-vault-plugin:
        allowConcurrency: true
        discover:
          find:
            command: [sh, -c, 'find . -name "*.yaml" | xargs -I {} grep -l "<path:" {}']
        generate:
          command: [sh, -c]
          args:
            - |
              argocd-vault-plugin generate .
      argocd-vault-plugin-kustomize-build-with-helm:
        generate:
          command: [sh, -c]
          args:
            - |
              argocd-vault-plugin generate . |
              kustomize build --enable-helm
  params:
    server.insecure: true

crds:
  install: true
  keep: false

server:
  extraArgs:
    - --insecure

repoServer:
  rbac:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "watch", "list"]
  volumes:
    - name: cmp-plugin
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
    - name: custom-tools
      emptyDir: {}
  volumeMounts:
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: cmp-tmp
    - name: custom-tools
      mountPath: /usr/local/bin
  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image: '{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-plugin
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp
    - name: plugin-avp-directory-include
      command: [/var/run/argocd/argocd-cmp-server]
      image: '{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      env:
        - name: AVP_TYPE
          value: kubernetessecret
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-directory-include.yaml
          name: cmp-plugin
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
  initContainers:
    - name: download-tools
      image: alpine:3.18
      command: [sh, -c]
      env:
        - name: AVP_VERSION
          value: "1.17.0"
      args:
        - >-
          wget -O argocd-vault-plugin
          https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools

extraObjects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cmp-plugin
    data:
      avp-directory-include.yaml: |
        apiVersion: argoproj.io/v1alpha1
        kind: ConfigManagementPlugin
        metadata:
          name: argocd-vault-plugin
        spec:
          allowConcurrency: true
          discover:
            find:
              command: [sh, -c, 'find . -name "*.yaml" | xargs -I {} grep -l "<path:" {}']
          generate:
            command: [sh, -c, 'argocd-vault-plugin generate ./']
          lockRepo: false
      kustomize-build-with-helm.yaml: |
        apiVersion: argoproj.io/v1alpha1
        kind: ConfigManagementPlugin
        metadata:
          name: kustomize-build-with-helm
        spec:
          allowConcurrency: true
          generate:
            command: [ "sh", "-c" ]
            args: [ "kustomize build --enable-helm" ]
          lockRepo: false
      argocd-vault-plugin-kustomize-build-with-helm.yaml: |
        apiVersion: argoproj.io/v1alpha1
        kind: ConfigManagementPlugin
        metadata:
          name: argocd-vault-plugin-kustomize-build-with-helm
        spec:
          allowConcurrency: true
          generate:
            command: [sh, -c]
            args:
              - |
                argocd-vault-plugin generate . |
                kustomize build --enable-helm
          lockRepo: false