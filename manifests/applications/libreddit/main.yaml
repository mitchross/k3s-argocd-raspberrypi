apiVersion: apps/v1
kind: Deployment
metadata:
  name: libreddit
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: libreddit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: libreddit
    spec:
      containers:
      - image: quay.io/redlib/redlib:latest
        imagePullPolicy: Always
        name: libreddit
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: libreddit
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: libreddit
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: libreddit
  namespace: default
spec:
  hostnames:
  - libreddit.<path:stringreplacesecret#domain>
  parentRefs:
  - name: external
    namespace: gateway
    sectionName: https
  rules:
  - backendRefs:
    - name: libreddit
      port: 8080
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  annotations:
    external-dns.custom/type: public
  name: libreddit
  namespace: default
spec:
  endpoints:
  - dnsName: libreddit.<path:stringreplacesecret#domain>
    providerSpecific:
    - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
      value: 'true'
    recordType: CNAME
    targets:
    - ingress.<path:stringreplacesecret#domain>
