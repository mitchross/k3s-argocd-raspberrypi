apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  labels:
    app.kubernetes.io/part-of: argocd
  name: sso
  namespace: argocd
spec:
  data:
  - remoteRef:
      key: sso
      property: argocd_client_id
    secretKey: client_id
  - remoteRef:
      key: sso
      property: argocd_client_secret
    secretKey: client_secret
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: stringreplacesecret
  namespace: argocd
spec:
  data:
  - remoteRef:
      key: stringreplacesecret-proxmox
      property: domain
    secretKey: domain
  - remoteRef:
      key: stringreplacesecret-proxmox
      property: cloudflaretunnelid
    secretKey: cloudflaretunnelid
  - remoteRef:
      key: stringreplacesecret-proxmox
      property: ciliumipamcidr
    secretKey: ciliumipamcidr
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: homelab
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - name: '*'
    namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  name: argocd-http
  namespace: argocd
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: argocd.<path:stringreplacesecret#domain>
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
  name: argocd-grpc
  namespace: argocd
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: argocd.<path:stringreplacesecret#domain>
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: argocd
  namespace: argocd
spec:
  hostnames:
  - argocd.<path:stringreplacesecret#domain>
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  rules:
  - backendRefs:
    - name: argocd-server
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GRPCRoute
metadata:
  name: argocd
  namespace: argocd
spec:
  hostnames:
  - argocd.<path:stringreplacesecret#domain>
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  rules:
  - backendRefs:
    - name: argocd-server
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  annotations:
    external-dns.custom/type: private
  name: argocd
  namespace: argocd
spec:
  endpoints:
  - dnsName: argocd.<path:stringreplacesecret#domain>
    providerSpecific:
    - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
      value: 'false'
    recordType: CNAME
    targets:
    - intgw.<path:stringreplacesecret#domain>
