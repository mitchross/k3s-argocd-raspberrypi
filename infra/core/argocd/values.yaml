configs:
  cm:
    create: true
    application.resourceTrackingMethod: "annotation+label"
  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [ "sh", "-c" ]
          args: [ "kustomize build --enable-helm" ]
      argocd-vault-plugin:
        generate:
          command: ["argocd-vault-plugin"]
          args: ["generate", "./"]
  params:
    server.insecure: true

crds:
  install: true
  # -- Keep CRDs on chart uninstall
  keep: false

controller:
  resources:
    requests:
      cpu: 100m
      memory: 700Mi
    limits:
      cpu: 4000m
      memory: 2Gi

dex:
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 1000m
      memory: 64Mi

redis:
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 2000m
      memory: 128Mi

server:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 4000m
      memory: 128Mi

repoServer:
  initContainers:
    - name: download-tools
      image: alpine:3.14
      command: [sh, -c]
      env:
        - name: AVP_VERSION
          value: "1.18.0"  # Replace with the desired version
      args:
        - >-
          ARCH=$(uname -m);
          case $ARCH in
            x86_64) BINARY_ARCH="amd64" ;;
            aarch64) BINARY_ARCH="arm64" ;;
            *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
          esac;
          wget -O argocd-vault-plugin
          https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_${BINARY_ARCH} &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  containerSecurityContext:
    readOnlyRootFilesystem: true
  volumes:
    - name: cmp-kustomize-build-with-helm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-argocd-vault-plugin
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
    - name: custom-tools
      emptyDir: {}
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 4000m
      memory: 512Mi
  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image: '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: [ "ALL" ]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-kustomize-build-with-helm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp
    - name: argocd-vault-plugin
      command: [/var/run/argocd/argocd-cmp-server]
      image: '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: [ "ALL" ]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-argocd-vault-plugin
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: argocd-vault-plugin.yaml
        - mountPath: /tmp
          name: cmp-tmp
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

applicationSet:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 256Mi

notifications:
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 128Mi